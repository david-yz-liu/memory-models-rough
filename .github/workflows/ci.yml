name: Memory Models Tests
on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]
    push:
        branches:
            - main

jobs:
    prettier:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Set up node and cache packages
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: npm
            - name: Install npm packages
              run: npm ci
            - name: Run prettier
              run: npx prettier . --write
            - name: Commit changes
              uses: stefanzweifel/git-auto-commit-action@v4
              with:
                  commit_message: Apply formatting changes
                  branch: ${{ github.head_ref }}
    jest:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Set up node and cache packages
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: npm
            - name: Install npm packages
              run: npm ci
            - name: Run jest tests
              run: npm run test-cov
            - name: Coveralls (jest)
              uses: coverallsapp/github-action@v2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

    build:
        runs-on: ubuntu-latest
        environment:
            name: publish-docs
            url: https://www.cs.toronto.edu/~david/memory-viz
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v3
            - name: Set up node and cache packages
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: npm
            - name: Install npm packages
              run: npm ci
            - name: Build docs and demo website
              run: |
                  npm run build --workspace=demo
                  npm run build --workspace=docs
                  mkdir docs/build/demo
                  cp -r demo/dist/* docs/build/demo
            - name: Deploy to Server
              uses: easingthemes/ssh-deploy@main
              with:
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                  ARGS: "-rlgoDzvc -i --delete"
                  SOURCE: "docs/build/"
                  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                  REMOTE_USER: ${{ secrets.REMOTE_USER }}
                  TARGET: ${{ secrets.REMOTE_TARGET }}
                  EXCLUDE: "/dist/, /node_modules/"
